apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-allopen'

allOpen {
    // allows mocking for classes w/o directly opening them for release builds
    annotation 'com.owncloud.android.testing.OpenClass'
}

android {
    compileSdkVersion sdkCompileVersion

    defaultConfig {
        minSdkVersion sdkMinVersion
        targetSdkVersion sdkTargetVersion
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    sourceSets {
        androidTest.java.srcDirs += "src/test-common/java"
        test.java.srcDirs += "src/test-common/java"
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    testImplementation project(':owncloudTestUtil')

    implementation "androidx.appcompat:appcompat:$appCompat"

    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlinVersion"

    // Dependencies for unit tests
    testImplementation "junit:junit:$junitVersion"
    testImplementation "androidx.arch.core:core-testing:$archLifecycleVersion"
    testImplementation "io.mockk:mockk:$mockkVersion"

    // Dependencies for instrumented tests
    androidTestImplementation "androidx.arch.core:core-testing:$archLifecycleVersion"
    androidTestImplementation "androidx.test:runner:$androidTestVersion"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espressoTestVersion"
    androidTestImplementation ("io.mockk:mockk-android:$mockkVersion") {
        exclude module: 'objenesis'
    }
}

allOpen {
    // allows mocking for classes w/o directly opening them for release builds
    annotation 'com.owncloud.android.testing.OpenClass'
}

configurations.all {
    resolutionStrategy.eachDependency { details ->
        if (details.requested.group == 'androidx.arch.core' && !details.requested.name.contains('core-runtime')) {
            details.useVersion "2.0.0"
        }
    }
}
